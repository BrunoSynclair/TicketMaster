++ Pré-requisitos Instalados
    Visual Studio 2022 com o workload .NET desktop development
    .NET SDK 8.0 instalado
    Verifique com: dotnet --version
    PostgreSQL 17 instalado e rodando
	Ferramentas do Entity Framework (EF Core Tools) instaladas:
		dotnet tool install --global dotnet-ef
	Executável gerado em:
		TicketMasterVFinal\bin\Debug\net8.0-windows\TicketMasterVFinal.exe

++ Configuração do Banco de Dados
	No arquivo appsettings.json, configure a string de conexão:
	"ConnectionStrings": {
	"DefaultConnection": "Host=localhost;Port=5432;Database=TicketMaster;Username=postgres;Password=sua_senha"
	}

++ Como Criar as Tabelas Usando EF Core
	Gerar a migration:
		dotnet ef migrations add CriarTabelaTickets --project TicketMasterVFinal
	Atualizar o banco de dados:
		dotnet ef database update --project TicketMasterVFinal

++ Observação sobre o Relatório por Período
	Para garantir que um dia inteiro seja considerado, inclua um intervalo mais amplo:
		Por exemplo, para buscar dados do dia 15, utilize um filtro de 14 a 16.
	Isso evita problemas de dados sendo ignorados por causa de horários mal ajustados.

++️ [Opcional] Criação Manual do Banco com SQL
Se preferir usar SQL diretamente, conecte-se ao PostgreSQL via pgAdmin ou psql e execute:
	CREATE DATABASE "TicketMaster";

	CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
	  "MigrationId" character varying(150) NOT NULL,
	  "ProductVersion" character varying(32) NOT NULL,
	  CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
	);

	START TRANSACTION;

	CREATE TABLE funcionarios (
	  id integer GENERATED BY DEFAULT AS IDENTITY,
	  nome text NOT NULL,
	  cpf text NOT NULL,
	  situacao integer,
	  ultima_atualizacao_cadastro timestamp with time zone,
	  CONSTRAINT "PK_funcionarios" PRIMARY KEY (id)
	);

	CREATE TABLE tickets (
	  id integer GENERATED BY DEFAULT AS IDENTITY,
	  quantidade integer NOT NULL,
	  funcionario_id integer NOT NULL,
	  situacao integer NOT NULL,
	  data_modificacao timestamp with time zone,
	  CONSTRAINT "PK_tickets" PRIMARY KEY (id),
	  CONSTRAINT "FK_tickets_funcionarios_funcionario_id" FOREIGN KEY (funcionario_id) REFERENCES funcionarios (id) ON DELETE CASCADE
	);

	CREATE INDEX "IX_tickets_funcionario_id" ON tickets (funcionario_id);

	INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
	VALUES ('20250410031809_CriarTabelaTickets', '9.0.3');

	COMMIT;
